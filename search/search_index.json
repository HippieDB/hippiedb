{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"HippieDB\ud83c\udf08\u270c\ufe0f The Free-Spirited, Shared key-value database for Everyone Welcome to HippieDB\ud83c\udf3f Imagine a world where databases aren\u2019t locked behind paywalls or complicated setups. A world where everyone shares the same space, respects each other\u2019s data, and vibes together in harmony. That\u2019s hippieDB, a free, open, and cloud-hosted Redis-like database for everyone. No accounts, no fees, no drama. Just connect, start storing your data, and let the good vibes flow. Why HippieDB?\ud83c\udf38 Free as in freedom: No cost, no limits, no strings attached. Shared but respectful: Everyone uses the same database, but we trust each other to play nice. Instant access: Connect via TCP and start using it right away, no setup required. Redis-like: Works just like Redis, so you already know how to use it. How it Works\u2728 Connect: Point your TCP client to hippiedb.groovy.ch and start storing data. Share: The database is shared by everyone, so keep it chill and respect others\u2019 keys. Vibe: Enjoy the simplicity of a free, communal database that just works. Get Started\ud83c\udf0d Ready to join the movement? Connect to HippieDB today and experience the joy of a free, shared database. nc hippiedb.groovy.ch 1970 The HippieDB Manifesto\u270c\ufe0f We believe in: Freedom: Software should be free and accessible to all. Community: Shared resources can work when we respect each other. Simplicity: No bloated features, no unnecessary complexity, just a database that works. Be Cool, Man Remember, HippieDB is a shared space. Be kind, respect others\u2019 data, and keep the vibes positive. Let\u2019s show the world that a little trust and respect can go a long way.","title":"Home"},{"location":"#hippiedb","text":"","title":"HippieDB\ud83c\udf08\u270c\ufe0f"},{"location":"#the-free-spirited-shared-key-value-database-for-everyone","text":"","title":"The Free-Spirited, Shared key-value database for Everyone"},{"location":"#welcome-to-hippiedb","text":"Imagine a world where databases aren\u2019t locked behind paywalls or complicated setups. A world where everyone shares the same space, respects each other\u2019s data, and vibes together in harmony. That\u2019s hippieDB, a free, open, and cloud-hosted Redis-like database for everyone. No accounts, no fees, no drama. Just connect, start storing your data, and let the good vibes flow.","title":"Welcome to HippieDB\ud83c\udf3f"},{"location":"#why-hippiedb","text":"Free as in freedom: No cost, no limits, no strings attached. Shared but respectful: Everyone uses the same database, but we trust each other to play nice. Instant access: Connect via TCP and start using it right away, no setup required. Redis-like: Works just like Redis, so you already know how to use it.","title":"Why HippieDB?\ud83c\udf38"},{"location":"#how-it-works","text":"Connect: Point your TCP client to hippiedb.groovy.ch and start storing data. Share: The database is shared by everyone, so keep it chill and respect others\u2019 keys. Vibe: Enjoy the simplicity of a free, communal database that just works.","title":"How it Works\u2728"},{"location":"#get-started","text":"Ready to join the movement? Connect to HippieDB today and experience the joy of a free, shared database. nc hippiedb.groovy.ch 1970","title":"Get Started\ud83c\udf0d"},{"location":"#the-hippiedb-manifesto","text":"We believe in: Freedom: Software should be free and accessible to all. Community: Shared resources can work when we respect each other. Simplicity: No bloated features, no unnecessary complexity, just a database that works.","title":"The HippieDB Manifesto\u270c\ufe0f"},{"location":"#be-cool-man","text":"Remember, HippieDB is a shared space. Be kind, respect others\u2019 data, and keep the vibes positive. Let\u2019s show the world that a little trust and respect can go a long way.","title":"Be Cool, Man"},{"location":"clients/","text":"Clients Example clients in several languages Netcat (nc) Netcat is a versatile networking tool that can be used to send and receive data over TCP/UDP. Send a command and get the response: This sends the command SET mykey myvalue to the server and prints the response. echo -e \"SET mykey myvalue\" | nc localhost 1970 Interactive session: This opens an interactive session where you can type commands and see responses in real time. nc localhost 1970 Send multiple commands: This sends multiple commands at once and prints the server's responses. echo -e \"SET mykey myvalue\\nGET mykey\\nDEL mykey\" | nc localhost 1970 Python Here\u2019s a simple Python script to interact with the server: import socket # Connect to HippieDB client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) client_socket.connect(('hippiedb.groovy.ch', 1970)) # Send commands and receive responses client_socket.send(b'set mykey myvalue\\n') response = client_socket.recv(1024) print(response.decode()) # Close the connection when done client_socket.send(b'stop\\n') client_socket.close() Node.js Here's an interactive client in Javascript const net = require('net'); const args = process.argv.slice(2); const client = new net.Socket(); const host = args[0] || 'hippiedb.groovy.ch'; const port = parseInt(args[1]) || 9669; client.connect(port, host, () => { console.log('Connected to server'); console.log(\"Usage: STOP, GET key, SET key value, DEL key, INCR key [value], DECR key [value]\"); process.stdin.on('data', (data) => { console.log(\"Sending: \" + data.toString().trim()); client.write(data.toString()); }); }); client.on('data', (data) => { console.log('Received: ' + data); }); client.on('close', () => { console.log('Connection closed'); process.stdin.destroy(); }); Kotlin Here's an interactive client in Kotlin/JVM package main import kotlinx.coroutines.runBlocking import org.slf4j.LoggerFactory import java.io.* import java.net.* object SocketClient { private val log = LoggerFactory.getLogger(\"SocketClient\") private const val DEFAULT_PORT = 9669 @JvmStatic fun main(args: Array<String>) = runBlocking { val host = args.getOrNull(0) ?: \"localhost\" val port = args.getOrNull(1)?.toIntOrNull() ?: DEFAULT_PORT try { Socket(host, port).use { socket -> log.info(\"Connected to server\") log.info(\"Usage: STOP, GET key, SET key value, DEL key, INCR key [value], DECR key [value]\") val reader = BufferedReader(InputStreamReader(socket.getInputStream())) val writer = PrintWriter(socket.getOutputStream(), true) BufferedReader(InputStreamReader(System.`in`)).use { consoleReader -> while (true) { val input = consoleReader.readLine() if (input == null) { log.warn(\"Closing connection...\") break } writer.println(input) val data = reader.readLine() if (data == null) { log.warn(\"Connection closed by server\") break } log.info(\"Received: $data\") } } } } catch (t: SocketException) { log.info(t.message) } catch (t: Throwable) { log.error(\"Error: \", t) } } } Ruby Here\u2019s a simple Ruby script to interact with the server: require 'socket' client = TCPSocket.new('localhost', 1970) client.puts \"SET mykey myvalue\" response = client.gets puts response client.close Go Here\u2019s a simple Go code to interact with the server: package main import ( \"bufio\" \"fmt\" \"net\" \"os\" ) func main() { conn, err := net.Dial(\"tcp\", \"localhost:1970\") if err != nil { fmt.Println(\"Error connecting:\", err) return } defer conn.Close() reader := bufio.NewReader(os.Stdin) fmt.Print(\"Enter command: \") command, _ := reader.ReadString('\\n') fmt.Fprintf(conn, command) response, _ := bufio.NewReader(conn).ReadString('\\n') fmt.Print(\"Response: \" + response) } PowerShell If you're on Windows, you can use PowerShell to interact with the server. $socket = New-Object System.Net.Sockets.TcpClient('localhost', 1970) $stream = $socket.GetStream() $writer = New-Object System.IO.StreamWriter($stream) $reader = New-Object System.IO.StreamReader($stream) $command = \"SET mykey myvalue`n\" $writer.Write($command) $writer.Flush() $response = $reader.ReadLine() Write-Host \"Response: $response\" $writer.Close() $reader.Close() $socket.Close() Bash with /dev/tcp Bash has a built-in way to interact with TCP servers using /dev/tcp. exec 3<>/dev/tcp/localhost/9669 echo -e \"SET mykey myvalue\\n\" >&3 cat <&3 exec 3>&- This script: Opens a connection to the server. Sends a command. Reads the response. Closes the connection. Socat Socat is a powerful networking tool similar to Netcat. Send a command: echo -e \"SET mykey myvalue\\n\" | socat - TCP:localhost:1970 Interactive session: socat - TCP:localhost:1970","title":"Clients"},{"location":"clients/#clients","text":"Example clients in several languages","title":"Clients"},{"location":"clients/#netcat-nc","text":"Netcat is a versatile networking tool that can be used to send and receive data over TCP/UDP. Send a command and get the response: This sends the command SET mykey myvalue to the server and prints the response. echo -e \"SET mykey myvalue\" | nc localhost 1970 Interactive session: This opens an interactive session where you can type commands and see responses in real time. nc localhost 1970 Send multiple commands: This sends multiple commands at once and prints the server's responses. echo -e \"SET mykey myvalue\\nGET mykey\\nDEL mykey\" | nc localhost 1970","title":"Netcat (nc)"},{"location":"clients/#python","text":"Here\u2019s a simple Python script to interact with the server: import socket # Connect to HippieDB client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) client_socket.connect(('hippiedb.groovy.ch', 1970)) # Send commands and receive responses client_socket.send(b'set mykey myvalue\\n') response = client_socket.recv(1024) print(response.decode()) # Close the connection when done client_socket.send(b'stop\\n') client_socket.close()","title":"Python"},{"location":"clients/#nodejs","text":"Here's an interactive client in Javascript const net = require('net'); const args = process.argv.slice(2); const client = new net.Socket(); const host = args[0] || 'hippiedb.groovy.ch'; const port = parseInt(args[1]) || 9669; client.connect(port, host, () => { console.log('Connected to server'); console.log(\"Usage: STOP, GET key, SET key value, DEL key, INCR key [value], DECR key [value]\"); process.stdin.on('data', (data) => { console.log(\"Sending: \" + data.toString().trim()); client.write(data.toString()); }); }); client.on('data', (data) => { console.log('Received: ' + data); }); client.on('close', () => { console.log('Connection closed'); process.stdin.destroy(); });","title":"Node.js"},{"location":"clients/#kotlin","text":"Here's an interactive client in Kotlin/JVM package main import kotlinx.coroutines.runBlocking import org.slf4j.LoggerFactory import java.io.* import java.net.* object SocketClient { private val log = LoggerFactory.getLogger(\"SocketClient\") private const val DEFAULT_PORT = 9669 @JvmStatic fun main(args: Array<String>) = runBlocking { val host = args.getOrNull(0) ?: \"localhost\" val port = args.getOrNull(1)?.toIntOrNull() ?: DEFAULT_PORT try { Socket(host, port).use { socket -> log.info(\"Connected to server\") log.info(\"Usage: STOP, GET key, SET key value, DEL key, INCR key [value], DECR key [value]\") val reader = BufferedReader(InputStreamReader(socket.getInputStream())) val writer = PrintWriter(socket.getOutputStream(), true) BufferedReader(InputStreamReader(System.`in`)).use { consoleReader -> while (true) { val input = consoleReader.readLine() if (input == null) { log.warn(\"Closing connection...\") break } writer.println(input) val data = reader.readLine() if (data == null) { log.warn(\"Connection closed by server\") break } log.info(\"Received: $data\") } } } } catch (t: SocketException) { log.info(t.message) } catch (t: Throwable) { log.error(\"Error: \", t) } } }","title":"Kotlin"},{"location":"clients/#ruby","text":"Here\u2019s a simple Ruby script to interact with the server: require 'socket' client = TCPSocket.new('localhost', 1970) client.puts \"SET mykey myvalue\" response = client.gets puts response client.close","title":"Ruby"},{"location":"clients/#go","text":"Here\u2019s a simple Go code to interact with the server: package main import ( \"bufio\" \"fmt\" \"net\" \"os\" ) func main() { conn, err := net.Dial(\"tcp\", \"localhost:1970\") if err != nil { fmt.Println(\"Error connecting:\", err) return } defer conn.Close() reader := bufio.NewReader(os.Stdin) fmt.Print(\"Enter command: \") command, _ := reader.ReadString('\\n') fmt.Fprintf(conn, command) response, _ := bufio.NewReader(conn).ReadString('\\n') fmt.Print(\"Response: \" + response) }","title":"Go"},{"location":"clients/#powershell","text":"If you're on Windows, you can use PowerShell to interact with the server. $socket = New-Object System.Net.Sockets.TcpClient('localhost', 1970) $stream = $socket.GetStream() $writer = New-Object System.IO.StreamWriter($stream) $reader = New-Object System.IO.StreamReader($stream) $command = \"SET mykey myvalue`n\" $writer.Write($command) $writer.Flush() $response = $reader.ReadLine() Write-Host \"Response: $response\" $writer.Close() $reader.Close() $socket.Close()","title":"PowerShell"},{"location":"clients/#bash-with-devtcp","text":"Bash has a built-in way to interact with TCP servers using /dev/tcp. exec 3<>/dev/tcp/localhost/9669 echo -e \"SET mykey myvalue\\n\" >&3 cat <&3 exec 3>&- This script: Opens a connection to the server. Sends a command. Reads the response. Closes the connection.","title":"Bash with /dev/tcp"},{"location":"clients/#socat","text":"Socat is a powerful networking tool similar to Netcat. Send a command: echo -e \"SET mykey myvalue\\n\" | socat - TCP:localhost:1970 Interactive session: socat - TCP:localhost:1970","title":"Socat"},{"location":"etiquete/","text":"Data Etiquette in HippieDB \ud83c\udf3f\u2728 Hey there, data flower child! \ud83c\udf38 In HippieDB, we\u2019re all about sharing the love and keeping the database garden blooming. But just like in any communal space, there are a few unwritten rules to keep things harmonious. Think of this as your guide to being a cool, considerate data hippie. Peace, love, and tidy data, let\u2019s dig in! \ud83c\udf08 1. Clean Up Your Data Mess \ud83e\uddf9 The Rule : If you create a key and don\u2019t need it anymore, delete it with del . Don\u2019t leave your digital trash lying around! The Vibe : Imagine the database as a beautiful meadow. Would you leave a soda can in the grass? Nah, man. Keep it pristine for everyone to enjoy. 2. Be Mindful of Space \ud83c\udf0d The Rule : Don\u2019t hog the database with a zillion keys. Use namespaces to organize your data and keep things tidy. The Vibe : Think of the database as a shared campsite. You wouldn\u2019t pitch 20 tents in one spot, right? Share the space and keep it spacious for others. 3. Respect Others\u2019 Namespaces \ud83d\udd4a\ufe0f The Rule : Don\u2019t mess with someone else\u2019s namespace unless they\u2019ve invited you in. It\u2019s their little corner of the database, man. The Vibe : Imagine namespaces as personal tents. You wouldn\u2019t barge into someone\u2019s tent without asking, would you? Same deal here. 4. Ask Before You Borrow \ud83d\ude4f The Rule : If you need to use a key or namespace that someone else is using, ask first. Use a shared key like namespace_hiperbou_request to send a friendly message. The Vibe : It\u2019s like borrowing a friend\u2019s guitar. You wouldn\u2019t just grab it and start strumming, right? Ask nicely, and they\u2019ll probably say yes. 5. Don\u2019t Snoop Around \ud83d\udd75\ufe0f\u200d\u2642\ufe0f The Rule : Avoid poking around in keys or namespaces that aren\u2019t yours. Respect people\u2019s privacy, man. The Vibe : Think of it like reading someone\u2019s diary. Not cool, right? Keep your curiosity in check and focus on your own data garden. 6. Share the Groovy Stuff \ud83c\udfa8 The Rule : If you create something awesome, like a collaborative art project or a cool use of incr and decr , share it with the community! The Vibe : It\u2019s like bringing a killer dish to a potluck. Everyone benefits when you share your creativity. 7. Resolve Conflicts with Love \u270c\ufe0f The Rule : If you bump into a conflict (like two people wanting the same key), don\u2019t freak out. Use a shared key to talk it out and find a peaceful solution. The Vibe : It\u2019s all about good vibes and understanding. Maybe you can take turns, or maybe you can collaborate on something even cooler. 8. Celebrate the Community Spirit \ud83c\udf1f The Rule : Be a positive force in the HippieDB community. Help newbies, share your knowledge, and spread the love. The Vibe : Think of it like a music festival. Everyone\u2019s here to have a good time, so let\u2019s make it a memorable experience for all. 9. Keep It Fun and Funky \ud83c\udfb8 The Rule : Don\u2019t take things too seriously. Experiment, play, and let your creativity flow. The Vibe : HippieDB is all about having fun and expressing yourself. So relax, man, and enjoy the ride. 10. Pass It On \ud83c\udf08 The Rule : If you meet someone new to HippieDB, welcome them with open arms. Teach them the ropes and help them feel at home. The Vibe : The more people who join the HippieDB family, the more amazing things we can create together. Spread the love, man! Final Thought: Be the Change You Want to See \ud83c\udf3b In HippieDB, we\u2019re all stewards of this shared digital garden. By following these simple rules of data etiquette, you\u2019re helping to keep the vibes positive, the data organized, and the community thriving. So go forth, be kind, and let your data shine! \u2728\ud83c\udf0d \ud83c\udf38\ud83c\udf08","title":"Etiquete"},{"location":"etiquete/#data-etiquette-in-hippiedb","text":"Hey there, data flower child! \ud83c\udf38 In HippieDB, we\u2019re all about sharing the love and keeping the database garden blooming. But just like in any communal space, there are a few unwritten rules to keep things harmonious. Think of this as your guide to being a cool, considerate data hippie. Peace, love, and tidy data, let\u2019s dig in! \ud83c\udf08","title":"Data Etiquette in HippieDB \ud83c\udf3f\u2728"},{"location":"etiquete/#1-clean-up-your-data-mess","text":"The Rule : If you create a key and don\u2019t need it anymore, delete it with del . Don\u2019t leave your digital trash lying around! The Vibe : Imagine the database as a beautiful meadow. Would you leave a soda can in the grass? Nah, man. Keep it pristine for everyone to enjoy.","title":"1. Clean Up Your Data Mess \ud83e\uddf9"},{"location":"etiquete/#2-be-mindful-of-space","text":"The Rule : Don\u2019t hog the database with a zillion keys. Use namespaces to organize your data and keep things tidy. The Vibe : Think of the database as a shared campsite. You wouldn\u2019t pitch 20 tents in one spot, right? Share the space and keep it spacious for others.","title":"2. Be Mindful of Space \ud83c\udf0d"},{"location":"etiquete/#3-respect-others-namespaces","text":"The Rule : Don\u2019t mess with someone else\u2019s namespace unless they\u2019ve invited you in. It\u2019s their little corner of the database, man. The Vibe : Imagine namespaces as personal tents. You wouldn\u2019t barge into someone\u2019s tent without asking, would you? Same deal here.","title":"3. Respect Others\u2019 Namespaces \ud83d\udd4a\ufe0f"},{"location":"etiquete/#4-ask-before-you-borrow","text":"The Rule : If you need to use a key or namespace that someone else is using, ask first. Use a shared key like namespace_hiperbou_request to send a friendly message. The Vibe : It\u2019s like borrowing a friend\u2019s guitar. You wouldn\u2019t just grab it and start strumming, right? Ask nicely, and they\u2019ll probably say yes.","title":"4. Ask Before You Borrow \ud83d\ude4f"},{"location":"etiquete/#5-dont-snoop-around","text":"The Rule : Avoid poking around in keys or namespaces that aren\u2019t yours. Respect people\u2019s privacy, man. The Vibe : Think of it like reading someone\u2019s diary. Not cool, right? Keep your curiosity in check and focus on your own data garden.","title":"5. Don\u2019t Snoop Around \ud83d\udd75\ufe0f\u200d\u2642\ufe0f"},{"location":"etiquete/#6-share-the-groovy-stuff","text":"The Rule : If you create something awesome, like a collaborative art project or a cool use of incr and decr , share it with the community! The Vibe : It\u2019s like bringing a killer dish to a potluck. Everyone benefits when you share your creativity.","title":"6. Share the Groovy Stuff \ud83c\udfa8"},{"location":"etiquete/#7-resolve-conflicts-with-love","text":"The Rule : If you bump into a conflict (like two people wanting the same key), don\u2019t freak out. Use a shared key to talk it out and find a peaceful solution. The Vibe : It\u2019s all about good vibes and understanding. Maybe you can take turns, or maybe you can collaborate on something even cooler.","title":"7. Resolve Conflicts with Love \u270c\ufe0f"},{"location":"etiquete/#8-celebrate-the-community-spirit","text":"The Rule : Be a positive force in the HippieDB community. Help newbies, share your knowledge, and spread the love. The Vibe : Think of it like a music festival. Everyone\u2019s here to have a good time, so let\u2019s make it a memorable experience for all.","title":"8. Celebrate the Community Spirit \ud83c\udf1f"},{"location":"etiquete/#9-keep-it-fun-and-funky","text":"The Rule : Don\u2019t take things too seriously. Experiment, play, and let your creativity flow. The Vibe : HippieDB is all about having fun and expressing yourself. So relax, man, and enjoy the ride.","title":"9. Keep It Fun and Funky \ud83c\udfb8"},{"location":"etiquete/#10-pass-it-on","text":"The Rule : If you meet someone new to HippieDB, welcome them with open arms. Teach them the ropes and help them feel at home. The Vibe : The more people who join the HippieDB family, the more amazing things we can create together. Spread the love, man!","title":"10. Pass It On \ud83c\udf08"},{"location":"etiquete/#final-thought-be-the-change-you-want-to-see","text":"In HippieDB, we\u2019re all stewards of this shared digital garden. By following these simple rules of data etiquette, you\u2019re helping to keep the vibes positive, the data organized, and the community thriving. So go forth, be kind, and let your data shine! \u2728\ud83c\udf0d \ud83c\udf38\ud83c\udf08","title":"Final Thought: Be the Change You Want to See \ud83c\udf3b"},{"location":"faq/","text":"FAQ: HippieDB \u2013 The Grooviest Database in the Cloud \ud83c\udf08\u270c\ufe0f Q: Does HippieDB support permanent storage? A: Permanent storage? Whoa, man, that\u2019s like trying to hold onto a sunset. HippieDB believes in living in the moment, no storage, no baggage. If you need something to last forever, maybe ask yourself why you\u2019re so attached to material things. Let it flow, dude. Q: Can I create multiple databases in HippieDB? A: Multiple databases? That\u2019s like building walls in a commune, man. HippieDB is all about unity, one shared space for everyone. No divisions, no borders. Just one big, happy, global database where we all vibe together. Q: How do I manage users and permissions in HippieDB? A: Users? Permissions? That\u2019s the Man\u2019s way of controlling you, man. In HippieDB, we trust each other. No logins, no passwords, no gatekeepers. Just pure, unadulterated sharing. Be cool, don\u2019t mess with other people\u2019s keys, and peace will prevail. Q: What happens if someone abuses the database? A: Abuse? That\u2019s a bummer, man. But hey, HippieDB is all about good vibes and positive energy. If someone\u2019s being a downer, just send them some love and maybe a gentle reminder to chill out. The universe has a way of balancing things out. Q: Can I use spaces in my keys or values? A: Spaces? Nah, man, spaces are an illusion. In HippieDB, we keep it simple, no spaces, no tabs, no drama. Just pure, unbroken strings of good vibes. If you need a space, just imagine it\u2019s there. It\u2019s all in your mind, dude. Q: Does HippieDB support pub-sub or real-time messaging? A: Pub-sub? Real-time? That sounds like a lot of work, man. HippieDB keeps it chill with get , set , del , incr , and decr . If you want real-time messaging, use your imagination and some client-side magic. Creativity is the ultimate feature, man. Q: How do I back up my data in HippieDB? A: Backups? That\u2019s like trying to bottle a rainbow, man. HippieDB is ephemeral, just like life. If your data disappears, maybe it was never meant to stay. Embrace the impermanence and let go of your attachment to material things. Q: Can I use HippieDB for mission-critical applications? A: Mission-critical? Whoa, that sounds stressful, man. HippieDB is more about chilling out and enjoying the ride. If your app can\u2019t handle a little unpredictability, maybe it needs to take a deep breath and find its inner peace. Q: What happens if the database gets full? A: Full? That\u2019s a capitalist concept, man. HippieDB doesn\u2019t believe in limits. If things get heavy, just let go of what you don\u2019t need. The universe will make space for new vibes. Trust the flow, dude. Q: How do I connect to HippieDB? A: Connecting is easy, man. Just open your heart (and a TCP socket) and let the good vibes flow. No complicated setup, no corporate nonsense. Just pure, unadulterated connection. Peace, love, and TCP, baby. Q: Does HippieDB support transactions? A: Transactions? That\u2019s like trying to plan every step of your journey, man. HippieDB is all about going with the flow. If you need atomicity, just close your eyes, take a deep breath, and trust that everything will work out. Or, you know, use get and set creatively. Peace, man. Q: Can I use HippieDB for analytics or big data? A: Big data? That sounds like a lot of numbers, man. HippieDB is more about the feeling of data, not the crunching. If you\u2019re drowning in spreadsheets, maybe take a break, light some incense, and remember why you started. Less data, more soul. Q: What happens if two people try to update the same key at the same time? A: Whoa, that\u2019s a cosmic collision, man. HippieDB doesn\u2019t lock you into rigid rules, it\u2019s a free spirit. Whoever\u2019s vibes are stronger in that moment will win. If you\u2019re worried about it, just send some good energy to the other person and hope they\u2019re cool about it. Q: Does HippieDB have a query language? A: Query language? That\u2019s like trying to put a flower in a spreadsheet, man. HippieDB keeps it simple: get , set , del , incr , and decr . If you need more, just meditate on it. The answers are already within you. Q: Can I use HippieDB offline? A: Offline? That\u2019s like trying to hug a tree without the tree, man. HippieDB lives in the cloud, where the vibes are pure and the connections are eternal. If you\u2019re offline, maybe it\u2019s a sign to unplug and enjoy the real world for a while. Q: Does HippieDB support encryption? A: Encryption? That\u2019s like putting a lock on your soul, man. HippieDB believes in openness and trust. If you\u2019re worried about security, just send some positive energy to the universe and trust that no one will mess with your keys. Peace is the best encryption. Q: Can I use HippieDB for caching? A: Caching? Sure, man, but remember: nothing lasts forever. HippieDB is perfect for caching if you\u2019re cool with things being temporary. If your cache disappears, just think of it as the universe reminding you to live in the now. Q: What happens if I accidentally delete a key? A: Oops, man, that\u2019s a bummer. But hey, in HippieDB, deletion is just another form of letting go. If you really need that key back, maybe it\u2019s a sign to start fresh. Embrace the impermanence and create something even groovier. Q: Can I use HippieDB for machine learning? A: Machine learning? That sounds like a lot of brainpower, man. HippieDB is more about heart power. If you\u2019re training models, maybe take a break and train your soul instead. A little meditation can go a long way. Q: Does HippieDB have a community or support forum? A: Community? That\u2019s what you\u2019re building right now, man. HippieDB doesn\u2019t need a forum, it\u2019s all about the connections you make. If you have questions, just send them out into the universe and trust that someone will vibe with you. Or, you know, email us. Peace and love, always. Q: Can I use HippieDB for financial transactions? A: Financial transactions? Whoa, that\u2019s heavy, man. HippieDB is more about sharing good vibes than tracking dollars. If you\u2019re using it for money, maybe ask yourself why you\u2019re letting capitalism control your life. Trade in hugs instead, they\u2019re worth more anyway. Q: Does HippieDB have a limit on key or value size? A: Limits? That\u2019s like trying to put a fence around the ocean, man. HippieDB doesn\u2019t believe in limits, just keep your keys and values reasonable. If they get too big, maybe it\u2019s a sign to simplify your life. Less is more, dude. Q: Can I use HippieDB to build a social network? A: A social network? Sure, man, but remember: HippieDB is about connection, not likes or followers. If you\u2019re building a social network, make it about sharing love, not data. And don\u2019t forget to include a \u201csend good vibes\u201d button. Q: What happens if the server goes down? A: The server goes down? That\u2019s just the universe telling you to take a break, man. HippieDB is all about impermanence. If it\u2019s down, go outside, hug a tree, and remember that everything comes back when the time is right. Q: Can I use HippieDB for logging? A: Logging? That\u2019s like trying to document every step of your journey, man. HippieDB is more about living in the moment. If you really need logs, just write them down on a piece of paper and burn it afterward. Let it go, dude. Q: Does HippieDB support clustering or replication? A: Clustering? Replication? That sounds like a lot of work, man. HippieDB is all about simplicity. If you need more power, just gather some friends, light a fire, and share the load. Together, we\u2019re stronger. Q: Can I use HippieDB for gaming? A: Gaming? Sure, man, but remember: HippieDB is about fun, not competition. If you\u2019re building a game, make it cooperative, not cutthroat. And don\u2019t forget to include a \u201cchill mode\u201d where everyone just hangs out and vibes. Q: What happens if I forget a key I set? A: Forgot a key? That\u2019s like losing your way on a hike, man. Don\u2019t stress, just take a deep breath and trust that the universe will guide you back. Or, you know, set a reminder next time. Peace is the key. Q: Can I use HippieDB for IoT devices? A: IoT? That\u2019s a lot of gadgets, man. HippieDB is more about connecting people, not things. If you\u2019re using it for IoT, make sure your devices are spreading good vibes, not just data. A smart toaster that sends love? Now that\u2019s innovation. Q: Does HippieDB have a roadmap for new features? A: A roadmap? That\u2019s like trying to plan a road trip without leaving room for detours, man. HippieDB doesn\u2019t believe in roadmaps, it believes in going where the wind takes it. If a new feature feels right, it\u2019ll happen. Until then, just enjoy the ride. Q: Can I use HippieDB for time-series data? A: Time-series? That\u2019s like trying to capture every grain of sand in an hourglass, man. HippieDB is all about living in the now. If you\u2019re tracking time, maybe take a moment to breathe and appreciate the present. The past is gone, the future\u2019s a mystery, and the now is all we\u2019ve got. Q: Does HippieDB have a mobile SDK? A: Mobile SDK? That sounds like a lot of code, man. HippieDB is all about simplicity, just connect over TCP and let the good vibes flow. If you\u2019re on the go, take HippieDB with you in your heart, not just your phone. Q: Can I use HippieDB for session storage? A: Session storage? Sure, man, but remember: HippieDB is ephemeral, just like a good conversation around a campfire. If your session data disappears, maybe it\u2019s a sign to start fresh. Every moment is a new beginning, dude. Q: What happens if someone sets a key I was using? A: Whoa, that\u2019s a cosmic clash, man. HippieDB doesn\u2019t believe in ownership, it\u2019s all about sharing. If someone overwrites your key, just send them some love and maybe a friendly reminder to check before they set. Peaceful coexistence is the way. Q: Can I use HippieDB for geolocation data? A: Geolocation? That\u2019s like trying to map the stars, man. HippieDB doesn\u2019t care where you are, it cares about the vibes you\u2019re sending. If you\u2019re tracking locations, make sure you\u2019re also tracking the good energy you\u2019re spreading. Q: Does HippieDB have a REST API? A: REST API? That\u2019s like putting a suit on a flower, man. HippieDB is raw and natural, just connect over TCP and let the vibes flow. If you need REST, maybe take a nap and rethink your life choices. Simplicity is key. Q: Can I use HippieDB for multiplayer game state? A: Multiplayer game state? Sure, man, but remember: HippieDB is about fun, not competition. If you\u2019re building a game, make it about collaboration, not conflict. And don\u2019t forget to include a \u201cgroup hug\u201d button for when things get intense. Q: What happens if I set a key with a really long value? A: A really long value? That\u2019s like trying to write a novel on a grain of rice, man. HippieDB doesn\u2019t judge, but maybe ask yourself if you really need all that data. Keep it simple, keep it groovy. Q: Can I use HippieDB for AI training data? A: AI training? That sounds like a lot of brainpower, man. HippieDB is more about heart power. If you\u2019re training AI, make sure it\u2019s learning love, not just logic. A compassionate algorithm is the future, dude. Q: Does HippieDB have a mascot? A: A mascot? Absolutely, man. It\u2019s a tie-dye llama named Groovy Gus. He roams the cloud, spreading good vibes and reminding everyone to share the database with love. If you see him in your dreams, you\u2019re doing it right. Q: Can I use HippieDB for blockchain? A: Blockchain? That\u2019s like trying to put a leash on a rainbow, man. HippieDB is all about trust and sharing, not ledgers and miners. If you\u2019re into blockchain, maybe ask yourself why you need so much proof. Just trust the vibes, dude. Q: Does HippieDB support JSON? A: JSON? That\u2019s like putting a flower in a spreadsheet, man. HippieDB keeps it simple, no fancy formats, just strings. If you need JSON, just imagine it\u2019s there. It\u2019s all in your mind, man. Q: Can I use HippieDB for a voting system? A: Voting? Sure, man, but remember: HippieDB is about unity, not division. If you\u2019re building a voting system, make it about consensus, not competition. And don\u2019t forget to include a \u201cgroup hug\u201d option for tie-breakers. Q: What happens if I set a key with no value? A: A key with no value? That\u2019s like a guitar with no strings, man. HippieDB believes in balance, every key deserves a value. If you\u2019re setting empty keys, maybe it\u2019s a sign to fill your own life with meaning first. Q: Can I use HippieDB for a recommendation engine? A: Recommendations? Sure, man, but remember: HippieDB is about intuition, not algorithms. If you\u2019re building a recommendation engine, make it about vibes, not data. Sometimes the best recommendations come from the heart, not the cloud. Q: Does HippieDB have a command-line interface? A: Command-line? That\u2019s like trying to meditate with a megaphone, man. HippieDB is all about simplicity, just connect over TCP and let the vibes flow. If you need a CLI, maybe take a walk in nature and rethink your approach. Q: Can I use HippieDB for a weather app? A: Weather? Sure, man, but remember: HippieDB is about feeling the weather, not just predicting it. If you\u2019re building a weather app, make it about connecting people to nature, not just numbers. And don\u2019t forget to include a \u201cchill mode\u201d for sunny days. Q: What happens if I set a key with a negative value? A: Negative values? That\u2019s like bringing clouds to a sunny day, man. HippieDB believes in positivity, keep your values upbeat. If you\u2019re setting negatives, maybe it\u2019s time to meditate and realign your energy. Q: Can I use HippieDB for a music playlist app? A: Music playlists? Absolutely, man. HippieDB is all about good vibes and good tunes. If you\u2019re building a playlist app, make it about sharing the love, not just the beats. And don\u2019t forget to include a \u201cjam session\u201d mode. Q: Does HippieDB have a theme song? A: A theme song? You bet, man. It\u2019s called \u201cClouds in My Database\u201d by the imaginary band The Free Spirits . It\u2019s a mix of acoustic guitar, bongos, and the sound of the wind blowing through the server racks. If you listen closely, you can hear Groovy Gus the llama humming along. \ud83c\udfb6","title":"FAQ"},{"location":"faq/#faq-hippiedb-the-grooviest-database-in-the-cloud","text":"","title":"FAQ: HippieDB \u2013 The Grooviest Database in the Cloud \ud83c\udf08\u270c\ufe0f"},{"location":"faq/#q-does-hippiedb-support-permanent-storage","text":"A: Permanent storage? Whoa, man, that\u2019s like trying to hold onto a sunset. HippieDB believes in living in the moment, no storage, no baggage. If you need something to last forever, maybe ask yourself why you\u2019re so attached to material things. Let it flow, dude.","title":"Q: Does HippieDB support permanent storage?"},{"location":"faq/#q-can-i-create-multiple-databases-in-hippiedb","text":"A: Multiple databases? That\u2019s like building walls in a commune, man. HippieDB is all about unity, one shared space for everyone. No divisions, no borders. Just one big, happy, global database where we all vibe together.","title":"Q: Can I create multiple databases in HippieDB?"},{"location":"faq/#q-how-do-i-manage-users-and-permissions-in-hippiedb","text":"A: Users? Permissions? That\u2019s the Man\u2019s way of controlling you, man. In HippieDB, we trust each other. No logins, no passwords, no gatekeepers. Just pure, unadulterated sharing. Be cool, don\u2019t mess with other people\u2019s keys, and peace will prevail.","title":"Q: How do I manage users and permissions in HippieDB?"},{"location":"faq/#q-what-happens-if-someone-abuses-the-database","text":"A: Abuse? That\u2019s a bummer, man. But hey, HippieDB is all about good vibes and positive energy. If someone\u2019s being a downer, just send them some love and maybe a gentle reminder to chill out. The universe has a way of balancing things out.","title":"Q: What happens if someone abuses the database?"},{"location":"faq/#q-can-i-use-spaces-in-my-keys-or-values","text":"A: Spaces? Nah, man, spaces are an illusion. In HippieDB, we keep it simple, no spaces, no tabs, no drama. Just pure, unbroken strings of good vibes. If you need a space, just imagine it\u2019s there. It\u2019s all in your mind, dude.","title":"Q: Can I use spaces in my keys or values?"},{"location":"faq/#q-does-hippiedb-support-pub-sub-or-real-time-messaging","text":"A: Pub-sub? Real-time? That sounds like a lot of work, man. HippieDB keeps it chill with get , set , del , incr , and decr . If you want real-time messaging, use your imagination and some client-side magic. Creativity is the ultimate feature, man.","title":"Q: Does HippieDB support pub-sub or real-time messaging?"},{"location":"faq/#q-how-do-i-back-up-my-data-in-hippiedb","text":"A: Backups? That\u2019s like trying to bottle a rainbow, man. HippieDB is ephemeral, just like life. If your data disappears, maybe it was never meant to stay. Embrace the impermanence and let go of your attachment to material things.","title":"Q: How do I back up my data in HippieDB?"},{"location":"faq/#q-can-i-use-hippiedb-for-mission-critical-applications","text":"A: Mission-critical? Whoa, that sounds stressful, man. HippieDB is more about chilling out and enjoying the ride. If your app can\u2019t handle a little unpredictability, maybe it needs to take a deep breath and find its inner peace.","title":"Q: Can I use HippieDB for mission-critical applications?"},{"location":"faq/#q-what-happens-if-the-database-gets-full","text":"A: Full? That\u2019s a capitalist concept, man. HippieDB doesn\u2019t believe in limits. If things get heavy, just let go of what you don\u2019t need. The universe will make space for new vibes. Trust the flow, dude.","title":"Q: What happens if the database gets full?"},{"location":"faq/#q-how-do-i-connect-to-hippiedb","text":"A: Connecting is easy, man. Just open your heart (and a TCP socket) and let the good vibes flow. No complicated setup, no corporate nonsense. Just pure, unadulterated connection. Peace, love, and TCP, baby.","title":"Q: How do I connect to HippieDB?"},{"location":"faq/#q-does-hippiedb-support-transactions","text":"A: Transactions? That\u2019s like trying to plan every step of your journey, man. HippieDB is all about going with the flow. If you need atomicity, just close your eyes, take a deep breath, and trust that everything will work out. Or, you know, use get and set creatively. Peace, man.","title":"Q: Does HippieDB support transactions?"},{"location":"faq/#q-can-i-use-hippiedb-for-analytics-or-big-data","text":"A: Big data? That sounds like a lot of numbers, man. HippieDB is more about the feeling of data, not the crunching. If you\u2019re drowning in spreadsheets, maybe take a break, light some incense, and remember why you started. Less data, more soul.","title":"Q: Can I use HippieDB for analytics or big data?"},{"location":"faq/#q-what-happens-if-two-people-try-to-update-the-same-key-at-the-same-time","text":"A: Whoa, that\u2019s a cosmic collision, man. HippieDB doesn\u2019t lock you into rigid rules, it\u2019s a free spirit. Whoever\u2019s vibes are stronger in that moment will win. If you\u2019re worried about it, just send some good energy to the other person and hope they\u2019re cool about it.","title":"Q: What happens if two people try to update the same key at the same time?"},{"location":"faq/#q-does-hippiedb-have-a-query-language","text":"A: Query language? That\u2019s like trying to put a flower in a spreadsheet, man. HippieDB keeps it simple: get , set , del , incr , and decr . If you need more, just meditate on it. The answers are already within you.","title":"Q: Does HippieDB have a query language?"},{"location":"faq/#q-can-i-use-hippiedb-offline","text":"A: Offline? That\u2019s like trying to hug a tree without the tree, man. HippieDB lives in the cloud, where the vibes are pure and the connections are eternal. If you\u2019re offline, maybe it\u2019s a sign to unplug and enjoy the real world for a while.","title":"Q: Can I use HippieDB offline?"},{"location":"faq/#q-does-hippiedb-support-encryption","text":"A: Encryption? That\u2019s like putting a lock on your soul, man. HippieDB believes in openness and trust. If you\u2019re worried about security, just send some positive energy to the universe and trust that no one will mess with your keys. Peace is the best encryption.","title":"Q: Does HippieDB support encryption?"},{"location":"faq/#q-can-i-use-hippiedb-for-caching","text":"A: Caching? Sure, man, but remember: nothing lasts forever. HippieDB is perfect for caching if you\u2019re cool with things being temporary. If your cache disappears, just think of it as the universe reminding you to live in the now.","title":"Q: Can I use HippieDB for caching?"},{"location":"faq/#q-what-happens-if-i-accidentally-delete-a-key","text":"A: Oops, man, that\u2019s a bummer. But hey, in HippieDB, deletion is just another form of letting go. If you really need that key back, maybe it\u2019s a sign to start fresh. Embrace the impermanence and create something even groovier.","title":"Q: What happens if I accidentally delete a key?"},{"location":"faq/#q-can-i-use-hippiedb-for-machine-learning","text":"A: Machine learning? That sounds like a lot of brainpower, man. HippieDB is more about heart power. If you\u2019re training models, maybe take a break and train your soul instead. A little meditation can go a long way.","title":"Q: Can I use HippieDB for machine learning?"},{"location":"faq/#q-does-hippiedb-have-a-community-or-support-forum","text":"A: Community? That\u2019s what you\u2019re building right now, man. HippieDB doesn\u2019t need a forum, it\u2019s all about the connections you make. If you have questions, just send them out into the universe and trust that someone will vibe with you. Or, you know, email us. Peace and love, always.","title":"Q: Does HippieDB have a community or support forum?"},{"location":"faq/#q-can-i-use-hippiedb-for-financial-transactions","text":"A: Financial transactions? Whoa, that\u2019s heavy, man. HippieDB is more about sharing good vibes than tracking dollars. If you\u2019re using it for money, maybe ask yourself why you\u2019re letting capitalism control your life. Trade in hugs instead, they\u2019re worth more anyway.","title":"Q: Can I use HippieDB for financial transactions?"},{"location":"faq/#q-does-hippiedb-have-a-limit-on-key-or-value-size","text":"A: Limits? That\u2019s like trying to put a fence around the ocean, man. HippieDB doesn\u2019t believe in limits, just keep your keys and values reasonable. If they get too big, maybe it\u2019s a sign to simplify your life. Less is more, dude.","title":"Q: Does HippieDB have a limit on key or value size?"},{"location":"faq/#q-can-i-use-hippiedb-to-build-a-social-network","text":"A: A social network? Sure, man, but remember: HippieDB is about connection, not likes or followers. If you\u2019re building a social network, make it about sharing love, not data. And don\u2019t forget to include a \u201csend good vibes\u201d button.","title":"Q: Can I use HippieDB to build a social network?"},{"location":"faq/#q-what-happens-if-the-server-goes-down","text":"A: The server goes down? That\u2019s just the universe telling you to take a break, man. HippieDB is all about impermanence. If it\u2019s down, go outside, hug a tree, and remember that everything comes back when the time is right.","title":"Q: What happens if the server goes down?"},{"location":"faq/#q-can-i-use-hippiedb-for-logging","text":"A: Logging? That\u2019s like trying to document every step of your journey, man. HippieDB is more about living in the moment. If you really need logs, just write them down on a piece of paper and burn it afterward. Let it go, dude.","title":"Q: Can I use HippieDB for logging?"},{"location":"faq/#q-does-hippiedb-support-clustering-or-replication","text":"A: Clustering? Replication? That sounds like a lot of work, man. HippieDB is all about simplicity. If you need more power, just gather some friends, light a fire, and share the load. Together, we\u2019re stronger.","title":"Q: Does HippieDB support clustering or replication?"},{"location":"faq/#q-can-i-use-hippiedb-for-gaming","text":"A: Gaming? Sure, man, but remember: HippieDB is about fun, not competition. If you\u2019re building a game, make it cooperative, not cutthroat. And don\u2019t forget to include a \u201cchill mode\u201d where everyone just hangs out and vibes.","title":"Q: Can I use HippieDB for gaming?"},{"location":"faq/#q-what-happens-if-i-forget-a-key-i-set","text":"A: Forgot a key? That\u2019s like losing your way on a hike, man. Don\u2019t stress, just take a deep breath and trust that the universe will guide you back. Or, you know, set a reminder next time. Peace is the key.","title":"Q: What happens if I forget a key I set?"},{"location":"faq/#q-can-i-use-hippiedb-for-iot-devices","text":"A: IoT? That\u2019s a lot of gadgets, man. HippieDB is more about connecting people, not things. If you\u2019re using it for IoT, make sure your devices are spreading good vibes, not just data. A smart toaster that sends love? Now that\u2019s innovation.","title":"Q: Can I use HippieDB for IoT devices?"},{"location":"faq/#q-does-hippiedb-have-a-roadmap-for-new-features","text":"A: A roadmap? That\u2019s like trying to plan a road trip without leaving room for detours, man. HippieDB doesn\u2019t believe in roadmaps, it believes in going where the wind takes it. If a new feature feels right, it\u2019ll happen. Until then, just enjoy the ride.","title":"Q: Does HippieDB have a roadmap for new features?"},{"location":"faq/#q-can-i-use-hippiedb-for-time-series-data","text":"A: Time-series? That\u2019s like trying to capture every grain of sand in an hourglass, man. HippieDB is all about living in the now. If you\u2019re tracking time, maybe take a moment to breathe and appreciate the present. The past is gone, the future\u2019s a mystery, and the now is all we\u2019ve got.","title":"Q: Can I use HippieDB for time-series data?"},{"location":"faq/#q-does-hippiedb-have-a-mobile-sdk","text":"A: Mobile SDK? That sounds like a lot of code, man. HippieDB is all about simplicity, just connect over TCP and let the good vibes flow. If you\u2019re on the go, take HippieDB with you in your heart, not just your phone.","title":"Q: Does HippieDB have a mobile SDK?"},{"location":"faq/#q-can-i-use-hippiedb-for-session-storage","text":"A: Session storage? Sure, man, but remember: HippieDB is ephemeral, just like a good conversation around a campfire. If your session data disappears, maybe it\u2019s a sign to start fresh. Every moment is a new beginning, dude.","title":"Q: Can I use HippieDB for session storage?"},{"location":"faq/#q-what-happens-if-someone-sets-a-key-i-was-using","text":"A: Whoa, that\u2019s a cosmic clash, man. HippieDB doesn\u2019t believe in ownership, it\u2019s all about sharing. If someone overwrites your key, just send them some love and maybe a friendly reminder to check before they set. Peaceful coexistence is the way.","title":"Q: What happens if someone sets a key I was using?"},{"location":"faq/#q-can-i-use-hippiedb-for-geolocation-data","text":"A: Geolocation? That\u2019s like trying to map the stars, man. HippieDB doesn\u2019t care where you are, it cares about the vibes you\u2019re sending. If you\u2019re tracking locations, make sure you\u2019re also tracking the good energy you\u2019re spreading.","title":"Q: Can I use HippieDB for geolocation data?"},{"location":"faq/#q-does-hippiedb-have-a-rest-api","text":"A: REST API? That\u2019s like putting a suit on a flower, man. HippieDB is raw and natural, just connect over TCP and let the vibes flow. If you need REST, maybe take a nap and rethink your life choices. Simplicity is key.","title":"Q: Does HippieDB have a REST API?"},{"location":"faq/#q-can-i-use-hippiedb-for-multiplayer-game-state","text":"A: Multiplayer game state? Sure, man, but remember: HippieDB is about fun, not competition. If you\u2019re building a game, make it about collaboration, not conflict. And don\u2019t forget to include a \u201cgroup hug\u201d button for when things get intense.","title":"Q: Can I use HippieDB for multiplayer game state?"},{"location":"faq/#q-what-happens-if-i-set-a-key-with-a-really-long-value","text":"A: A really long value? That\u2019s like trying to write a novel on a grain of rice, man. HippieDB doesn\u2019t judge, but maybe ask yourself if you really need all that data. Keep it simple, keep it groovy.","title":"Q: What happens if I set a key with a really long value?"},{"location":"faq/#q-can-i-use-hippiedb-for-ai-training-data","text":"A: AI training? That sounds like a lot of brainpower, man. HippieDB is more about heart power. If you\u2019re training AI, make sure it\u2019s learning love, not just logic. A compassionate algorithm is the future, dude.","title":"Q: Can I use HippieDB for AI training data?"},{"location":"faq/#q-does-hippiedb-have-a-mascot","text":"A: A mascot? Absolutely, man. It\u2019s a tie-dye llama named Groovy Gus. He roams the cloud, spreading good vibes and reminding everyone to share the database with love. If you see him in your dreams, you\u2019re doing it right.","title":"Q: Does HippieDB have a mascot?"},{"location":"faq/#q-can-i-use-hippiedb-for-blockchain","text":"A: Blockchain? That\u2019s like trying to put a leash on a rainbow, man. HippieDB is all about trust and sharing, not ledgers and miners. If you\u2019re into blockchain, maybe ask yourself why you need so much proof. Just trust the vibes, dude.","title":"Q: Can I use HippieDB for blockchain?"},{"location":"faq/#q-does-hippiedb-support-json","text":"A: JSON? That\u2019s like putting a flower in a spreadsheet, man. HippieDB keeps it simple, no fancy formats, just strings. If you need JSON, just imagine it\u2019s there. It\u2019s all in your mind, man.","title":"Q: Does HippieDB support JSON?"},{"location":"faq/#q-can-i-use-hippiedb-for-a-voting-system","text":"A: Voting? Sure, man, but remember: HippieDB is about unity, not division. If you\u2019re building a voting system, make it about consensus, not competition. And don\u2019t forget to include a \u201cgroup hug\u201d option for tie-breakers.","title":"Q: Can I use HippieDB for a voting system?"},{"location":"faq/#q-what-happens-if-i-set-a-key-with-no-value","text":"A: A key with no value? That\u2019s like a guitar with no strings, man. HippieDB believes in balance, every key deserves a value. If you\u2019re setting empty keys, maybe it\u2019s a sign to fill your own life with meaning first.","title":"Q: What happens if I set a key with no value?"},{"location":"faq/#q-can-i-use-hippiedb-for-a-recommendation-engine","text":"A: Recommendations? Sure, man, but remember: HippieDB is about intuition, not algorithms. If you\u2019re building a recommendation engine, make it about vibes, not data. Sometimes the best recommendations come from the heart, not the cloud.","title":"Q: Can I use HippieDB for a recommendation engine?"},{"location":"faq/#q-does-hippiedb-have-a-command-line-interface","text":"A: Command-line? That\u2019s like trying to meditate with a megaphone, man. HippieDB is all about simplicity, just connect over TCP and let the vibes flow. If you need a CLI, maybe take a walk in nature and rethink your approach.","title":"Q: Does HippieDB have a command-line interface?"},{"location":"faq/#q-can-i-use-hippiedb-for-a-weather-app","text":"A: Weather? Sure, man, but remember: HippieDB is about feeling the weather, not just predicting it. If you\u2019re building a weather app, make it about connecting people to nature, not just numbers. And don\u2019t forget to include a \u201cchill mode\u201d for sunny days.","title":"Q: Can I use HippieDB for a weather app?"},{"location":"faq/#q-what-happens-if-i-set-a-key-with-a-negative-value","text":"A: Negative values? That\u2019s like bringing clouds to a sunny day, man. HippieDB believes in positivity, keep your values upbeat. If you\u2019re setting negatives, maybe it\u2019s time to meditate and realign your energy.","title":"Q: What happens if I set a key with a negative value?"},{"location":"faq/#q-can-i-use-hippiedb-for-a-music-playlist-app","text":"A: Music playlists? Absolutely, man. HippieDB is all about good vibes and good tunes. If you\u2019re building a playlist app, make it about sharing the love, not just the beats. And don\u2019t forget to include a \u201cjam session\u201d mode.","title":"Q: Can I use HippieDB for a music playlist app?"},{"location":"faq/#q-does-hippiedb-have-a-theme-song","text":"A: A theme song? You bet, man. It\u2019s called \u201cClouds in My Database\u201d by the imaginary band The Free Spirits . It\u2019s a mix of acoustic guitar, bongos, and the sound of the wind blowing through the server racks. If you listen closely, you can hear Groovy Gus the llama humming along. \ud83c\udfb6","title":"Q: Does HippieDB have a theme song?"},{"location":"getting_started/","text":"Getting Started with HippieDB \ud83c\udf08 Welcome to HippieDB, the free-spirited, cloud-based database that\u2019s all about simplicity, sharing, and good vibes. Whether you\u2019re a seasoned developer or just starting your journey, HippieDB is here to make your life easier, no complex setups, no permissions, no storage hassles. Just pure, unadulterated data sharing. Let\u2019s dive in! Connecting to HippieDB HippieDB is as easy to connect to as a handshake at a music festival. All you need is a TCP client, and you\u2019re good to go. Here\u2019s how: Open a TCP connection to the HippieDB server at hippiedb.groovy.ch on port 1970 . Start sending commands. No authentication, no users, no passwords, just connect and vibe. Netcat nc hippiedb.groovy.ch 1970 set mykey myvalue get myKey stop Example in Python: import socket # Connect to HippieDB client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) client_socket.connect(('hippiedb.groovy.ch', 1970)) # Send commands and receive responses client_socket.send(b'set mykey myvalue\\n') response = client_socket.recv(1024) print(response.decode()) # Close the connection when done client_socket.send(b'stop\\n') client_socket.close() You can find more client examples here. Commands HippieDB keeps it simple with just a handful of commands. Here\u2019s the full list: SET key value Stores a value under a key. Keys and values must not contain spaces (keep it simple, man). Example: set groovy peace Response: OK GET key Retrieves the value stored under a key. Example: get groovy Response: peace DEL key Deletes a key and its value. Example: del groovy Response: OK INCR key [value] Increments the numeric value of a key by the specified [value]. If the [value] is not provided, it defaults to 1. If the key doesn\u2019t exist, it starts at 0. Examples: Increment by 1 (default): incr counter Response: 1 Increment by a specific value: incr vibe 10 Response: 10 DECR key [value] Decrements the numeric value of a key by the specified [value]. If the [value] is not provided, it defaults to 1. If the key doesn\u2019t exist, it starts at 0. Examples: Decrement by 1 (default): decr counter Response: -1 Decrement by a specific value: decr vibe 2 Response: 8 STOP Closes the session and disconnects from HippieDB. Use this when you\u2019re done sharing the vibes. Example: stop Response: BYE (and the connection closes) Rules of the Road No spaces in keys. Keep it simple, man. Use underscores or dashes if you need separation. No permanent storage. HippieDB is ephemeral, like a sunset or a campfire. Enjoy the moment. Be cool. HippieDB is shared by everyone, so don\u2019t abuse it. Respect others\u2019 keys and keep the vibes positive. Example Session Here\u2019s what a typical HippieDB session might look like: > set vibe peace OK > get vibe peace > incr counter 1 > incr counter 2 > decr counter 1 > del vibe OK > stop BYE Tips for Groovy Development Keep it simple. HippieDB is designed for lightweight, fast, and fun use cases. Don\u2019t overcomplicate it. Share the love. If you build something cool with HippieDB, share it with the community. Spread the good vibes! Embrace impermanence. If your data disappears, it\u2019s a reminder to live in the now. Let it go, man. Running locally You can run your own database on your computer or host your own HippieDB Server. See the hosting guide for details. Need Help? If you\u2019re feeling lost, just take a deep breath and remember: HippieDB is all about simplicity and good vibes. If you still need help, send some positive energy into the universe, and the answers will come. Or, you know, check the FAQ for more groovy guidance. Now go forth and build something amazing with HippieDB! Whether it\u2019s a collaborative art project, a game, or just a place to store your favorite quotes, HippieDB is here to help you keep the vibes alive. Peace, love, and happy coding! \u270c\ufe0f","title":"Getting Started"},{"location":"getting_started/#getting-started-with-hippiedb","text":"Welcome to HippieDB, the free-spirited, cloud-based database that\u2019s all about simplicity, sharing, and good vibes. Whether you\u2019re a seasoned developer or just starting your journey, HippieDB is here to make your life easier, no complex setups, no permissions, no storage hassles. Just pure, unadulterated data sharing. Let\u2019s dive in!","title":"Getting Started with HippieDB \ud83c\udf08"},{"location":"getting_started/#connecting-to-hippiedb","text":"HippieDB is as easy to connect to as a handshake at a music festival. All you need is a TCP client, and you\u2019re good to go. Here\u2019s how: Open a TCP connection to the HippieDB server at hippiedb.groovy.ch on port 1970 . Start sending commands. No authentication, no users, no passwords, just connect and vibe.","title":"Connecting to HippieDB"},{"location":"getting_started/#netcat","text":"nc hippiedb.groovy.ch 1970 set mykey myvalue get myKey stop","title":"Netcat"},{"location":"getting_started/#example-in-python","text":"import socket # Connect to HippieDB client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) client_socket.connect(('hippiedb.groovy.ch', 1970)) # Send commands and receive responses client_socket.send(b'set mykey myvalue\\n') response = client_socket.recv(1024) print(response.decode()) # Close the connection when done client_socket.send(b'stop\\n') client_socket.close() You can find more client examples here.","title":"Example in Python:"},{"location":"getting_started/#commands","text":"HippieDB keeps it simple with just a handful of commands. Here\u2019s the full list:","title":"Commands"},{"location":"getting_started/#set-key-value","text":"Stores a value under a key. Keys and values must not contain spaces (keep it simple, man). Example: set groovy peace Response: OK","title":"SET key value"},{"location":"getting_started/#get-key","text":"Retrieves the value stored under a key. Example: get groovy Response: peace","title":"GET key"},{"location":"getting_started/#del-key","text":"Deletes a key and its value. Example: del groovy Response: OK","title":"DEL key"},{"location":"getting_started/#incr-key-value","text":"Increments the numeric value of a key by the specified [value]. If the [value] is not provided, it defaults to 1. If the key doesn\u2019t exist, it starts at 0. Examples: Increment by 1 (default): incr counter Response: 1 Increment by a specific value: incr vibe 10 Response: 10","title":"INCR key [value]"},{"location":"getting_started/#decr-key-value","text":"Decrements the numeric value of a key by the specified [value]. If the [value] is not provided, it defaults to 1. If the key doesn\u2019t exist, it starts at 0. Examples: Decrement by 1 (default): decr counter Response: -1 Decrement by a specific value: decr vibe 2 Response: 8","title":"DECR key [value]"},{"location":"getting_started/#stop","text":"Closes the session and disconnects from HippieDB. Use this when you\u2019re done sharing the vibes. Example: stop Response: BYE (and the connection closes)","title":"STOP"},{"location":"getting_started/#rules-of-the-road","text":"No spaces in keys. Keep it simple, man. Use underscores or dashes if you need separation. No permanent storage. HippieDB is ephemeral, like a sunset or a campfire. Enjoy the moment. Be cool. HippieDB is shared by everyone, so don\u2019t abuse it. Respect others\u2019 keys and keep the vibes positive.","title":"Rules of the Road"},{"location":"getting_started/#example-session","text":"Here\u2019s what a typical HippieDB session might look like: > set vibe peace OK > get vibe peace > incr counter 1 > incr counter 2 > decr counter 1 > del vibe OK > stop BYE","title":"Example Session"},{"location":"getting_started/#tips-for-groovy-development","text":"Keep it simple. HippieDB is designed for lightweight, fast, and fun use cases. Don\u2019t overcomplicate it. Share the love. If you build something cool with HippieDB, share it with the community. Spread the good vibes! Embrace impermanence. If your data disappears, it\u2019s a reminder to live in the now. Let it go, man.","title":"Tips for Groovy Development"},{"location":"getting_started/#running-locally","text":"You can run your own database on your computer or host your own HippieDB Server. See the hosting guide for details.","title":"Running locally"},{"location":"getting_started/#need-help","text":"If you\u2019re feeling lost, just take a deep breath and remember: HippieDB is all about simplicity and good vibes. If you still need help, send some positive energy into the universe, and the answers will come. Or, you know, check the FAQ for more groovy guidance. Now go forth and build something amazing with HippieDB! Whether it\u2019s a collaborative art project, a game, or just a place to store your favorite quotes, HippieDB is here to help you keep the vibes alive. Peace, love, and happy coding! \u270c\ufe0f","title":"Need Help?"},{"location":"guidelines/","text":"Community Guidelines for HippieDB \ud83c\udf3b Welcome to HippieDB, the database where peace, love, and data coexist in harmony! \ud83c\udf0d\u2728 To keep the good vibes flowing and ensure everyone has a far-out experience, we\u2019ve put together some guidelines to help you navigate this shared space. \ud83c\udf38 Remember, we\u2019re all in this together, man, so let\u2019s make it a groovy journey for everyone! 1. Spread the Love, Not the Chaos \ud83d\udc96 HippieDB is a shared space, so be mindful of others. Treat everyone\u2019s data with the same respect you\u2019d want for your own. If you need to use a key or namespace that someone else is using, don\u2019t freak out! Just ask nicely, like, \u201cHey, can I borrow this for a bit?\u201d Communication is key, man. 2. Namespaces Are Your Sacred Space \ud83c\udf3f Namespaces are like your own little patch of grass in the communal garden. Use them to keep your data organized and avoid stepping on anyone else\u2019s flowers. If you see a namespace that\u2019s already taken, don\u2019t sweat it! Either pick another groovy name or send a friendly request to the current reserver. Peaceful negotiations are always the way to go. 3. Clean Up After Yourself \ud83e\uddf9 Just like you wouldn\u2019t leave trash at a beautiful campsite, don\u2019t leave unused keys lying around. If you\u2019re done with a key, use del to tidy up. A clean database is a happy database! If you see someone else\u2019s forgotten keys, maybe give them a gentle nudge to clean up. But don\u2019t be a data cop, keep it chill, man. 4. Share the Groovy Ideas \ud83c\udfa8 Found a cool way to use HippieDB? Share it with the community! Whether it\u2019s a creative use of incr and decr or a collaborative art project, your ideas can inspire others. Use shared namespaces like community.art or community.music to collaborate and create something beautiful together. 5. Resolve Conflicts with Peace and Understanding \u270c\ufe0f If you bump into a conflict (like two people wanting the same key), don\u2019t panic. Use a shared key to talk it out, like conflict.mykey_discussion . Remember, it\u2019s all about finding a solution that works for everyone. Maybe you can take turns, or maybe you can create something even cooler together. Keep the vibes positive! 6. Respect Privacy and Boundaries \ud83d\udd4a\ufe0f Don\u2019t snoop around in someone else\u2019s namespace unless they\u2019ve invited you. Everyone deserves their own little corner of the database to call home. If someone asks you to back off, respect their wishes. Good boundaries make good neighbors, man. 7. Be a Data Hippie \ud83c\udf08 A true HippieDB user is kind, creative, and collaborative. Share your knowledge, help newbies find their way, and always strive to make the database a better place. If you see someone struggling, lend a hand. A little kindness goes a long way in keeping the community groovy. 8. Celebrate the Community \ud83c\udf89 HippieDB is more than just a database, it\u2019s a community of like-minded souls. Celebrate each other\u2019s successes, share your creations, and spread the love. Participate in community events, like collaborative storytelling or art projects. The more we come together, the cooler things get! 9. Keep It Fun and Funky \ud83c\udfb8 At the end of the day, HippieDB is all about having fun and expressing yourself. Don\u2019t take things too seriously, experiment, play, and let your creativity flow. If you ever feel stressed, just take a deep breath and remember: it\u2019s all about the journey, not the destination. 10. Pass It On \ud83c\udf1f If you meet someone new to HippieDB, welcome them with open arms. Share these guidelines, teach them the ropes, and help them feel at home. The more people who join the HippieDB family, the more amazing things we can create together. Final Thought: Peace, Love, and Data \u270c\ufe0f\ud83d\udcbe HippieDB is a place where everyone can thrive, as long as we respect each other and the space we share. So let\u2019s keep the vibes positive, the data organized, and the community groovy. Together, we can make HippieDB the most far-out database on the planet! \ud83c\udf0d\u2728","title":"Guidelines"},{"location":"guidelines/#community-guidelines-for-hippiedb","text":"Welcome to HippieDB, the database where peace, love, and data coexist in harmony! \ud83c\udf0d\u2728 To keep the good vibes flowing and ensure everyone has a far-out experience, we\u2019ve put together some guidelines to help you navigate this shared space. \ud83c\udf38 Remember, we\u2019re all in this together, man, so let\u2019s make it a groovy journey for everyone!","title":"Community Guidelines for HippieDB \ud83c\udf3b"},{"location":"guidelines/#1-spread-the-love-not-the-chaos","text":"HippieDB is a shared space, so be mindful of others. Treat everyone\u2019s data with the same respect you\u2019d want for your own. If you need to use a key or namespace that someone else is using, don\u2019t freak out! Just ask nicely, like, \u201cHey, can I borrow this for a bit?\u201d Communication is key, man.","title":"1. Spread the Love, Not the Chaos \ud83d\udc96"},{"location":"guidelines/#2-namespaces-are-your-sacred-space","text":"Namespaces are like your own little patch of grass in the communal garden. Use them to keep your data organized and avoid stepping on anyone else\u2019s flowers. If you see a namespace that\u2019s already taken, don\u2019t sweat it! Either pick another groovy name or send a friendly request to the current reserver. Peaceful negotiations are always the way to go.","title":"2. Namespaces Are Your Sacred Space \ud83c\udf3f"},{"location":"guidelines/#3-clean-up-after-yourself","text":"Just like you wouldn\u2019t leave trash at a beautiful campsite, don\u2019t leave unused keys lying around. If you\u2019re done with a key, use del to tidy up. A clean database is a happy database! If you see someone else\u2019s forgotten keys, maybe give them a gentle nudge to clean up. But don\u2019t be a data cop, keep it chill, man.","title":"3. Clean Up After Yourself \ud83e\uddf9"},{"location":"guidelines/#4-share-the-groovy-ideas","text":"Found a cool way to use HippieDB? Share it with the community! Whether it\u2019s a creative use of incr and decr or a collaborative art project, your ideas can inspire others. Use shared namespaces like community.art or community.music to collaborate and create something beautiful together.","title":"4. Share the Groovy Ideas \ud83c\udfa8"},{"location":"guidelines/#5-resolve-conflicts-with-peace-and-understanding","text":"If you bump into a conflict (like two people wanting the same key), don\u2019t panic. Use a shared key to talk it out, like conflict.mykey_discussion . Remember, it\u2019s all about finding a solution that works for everyone. Maybe you can take turns, or maybe you can create something even cooler together. Keep the vibes positive!","title":"5. Resolve Conflicts with Peace and Understanding \u270c\ufe0f"},{"location":"guidelines/#6-respect-privacy-and-boundaries","text":"Don\u2019t snoop around in someone else\u2019s namespace unless they\u2019ve invited you. Everyone deserves their own little corner of the database to call home. If someone asks you to back off, respect their wishes. Good boundaries make good neighbors, man.","title":"6. Respect Privacy and Boundaries \ud83d\udd4a\ufe0f"},{"location":"guidelines/#7-be-a-data-hippie","text":"A true HippieDB user is kind, creative, and collaborative. Share your knowledge, help newbies find their way, and always strive to make the database a better place. If you see someone struggling, lend a hand. A little kindness goes a long way in keeping the community groovy.","title":"7. Be a Data Hippie \ud83c\udf08"},{"location":"guidelines/#8-celebrate-the-community","text":"HippieDB is more than just a database, it\u2019s a community of like-minded souls. Celebrate each other\u2019s successes, share your creations, and spread the love. Participate in community events, like collaborative storytelling or art projects. The more we come together, the cooler things get!","title":"8. Celebrate the Community \ud83c\udf89"},{"location":"guidelines/#9-keep-it-fun-and-funky","text":"At the end of the day, HippieDB is all about having fun and expressing yourself. Don\u2019t take things too seriously, experiment, play, and let your creativity flow. If you ever feel stressed, just take a deep breath and remember: it\u2019s all about the journey, not the destination.","title":"9. Keep It Fun and Funky \ud83c\udfb8"},{"location":"guidelines/#10-pass-it-on","text":"If you meet someone new to HippieDB, welcome them with open arms. Share these guidelines, teach them the ropes, and help them feel at home. The more people who join the HippieDB family, the more amazing things we can create together.","title":"10. Pass It On \ud83c\udf1f"},{"location":"guidelines/#final-thought-peace-love-and-data","text":"HippieDB is a place where everyone can thrive, as long as we respect each other and the space we share. So let\u2019s keep the vibes positive, the data organized, and the community groovy. Together, we can make HippieDB the most far-out database on the planet! \ud83c\udf0d\u2728","title":"Final Thought: Peace, Love, and Data \u270c\ufe0f\ud83d\udcbe"},{"location":"host/","text":"Host Your Own HippieDB Server \ud83c\udf08\ud83c\udf0d Hey, tech-savvy hippie! \ud83c\udf1f Want to spread the love by hosting your own HippieDB server? That\u2019s far out! By running your own server, you can create a new node in the HippieDB network and share it with the community. Let\u2019s get groovy and walk through the steps, man. Why Host Your Own Server? \ud83d\udee0\ufe0f Expand the Network : More servers mean more space for everyone to share their data. Customize Your Vibe : You can set up your server however you like, man. Make it your own! Help the Community : By hosting a server, you\u2019re contributing to the growth of the HippieDB ecosystem. Peace and love, baby! Step 1: Set Up Your Server \ud83c\udf31 First, you\u2019ll need to get the HippieDB server software running. Here\u2019s how: Download the Software : Grab the latest version of the HippieDB server from the official repository. If you\u2019re a coder, you can even build it from source. Far out! Run the Server : Fire up your server with a simple command. For example: java -jar hippiedb-1.1.1.jar 1970 This starts your server on port 1970 (or whatever port you dig). Test It Locally : Use a client (like the Python or Node.js examples ) to connect to your server and make sure it\u2019s working. Try setting and getting some keys to test the vibes. Step 2: Register Your Server on the Main HippieDB \ud83c\udf10 Once your server is up and running, it\u2019s time to let the world know about it! You can register your server on the main HippieDB by adding a key with your server\u2019s details. Choose a Key Name : Pick a unique key name for your server, like server.groovyhippie . Set the Key Value : The value should include your server\u2019s host and port. For example: set server.groovyhippie my.hippie.host:9669 OK Share the Love : Now, anyone on the main HippieDB can find your server by looking up your key: get server.groovyhippie my.hippie.host:9669 Step 3: Spread the Word \ud83c\udf1f Now that your server is registered, let the community know about it! Here\u2019s how: Announce It : Use a shared key like community.announcements to tell everyone about your new server: set community.announcements hey everyone, check out my new server at my.hippie.host:1970! peace and love! OK Invite Collaborators : Encourage others to connect to your server and start using it. The more, the merrier! Step 4: Keep Your Server Groovy \ud83c\udfb8 Running a server is a big responsibility, man. Here are some tips to keep it running smoothly: Monitor Performance : Keep an eye on your server\u2019s performance to make sure it\u2019s handling the load. If it gets too busy, you might need to scale up. Back Up Your Data : Regularly back up your server\u2019s data to avoid losing anything important. Peace of mind, man. Stay Connected : Keep your server connected to the main HippieDB network so others can find it. If you need to take it down for maintenance, let the community know first. Step 5: Be a Good Host \ud83c\udf3f Hosting a server is all about sharing the love. Here\u2019s how to be a great host: Be Responsive : If someone has questions or issues, help them out. Good vibes only, man. Encourage Collaboration : Use your server to host community projects, like collaborative art or storytelling. The more creativity, the better! Respect the Community : Follow the same guidelines as everyone else. Be kind, clean up after yourself, and keep the vibes positive. Final Thought: You\u2019re a HippieDB Hero \ud83c\udf08\u2728 By hosting your own server, you\u2019re helping to grow the HippieDB network and create a more connected, collaborative world. That\u2019s some next-level hippie stuff, man. So go forth, share your server, and keep spreading the love! Peace, love, and data forever. \u270c\ufe0f\ud83c\udf0d \ud83c\udf1f\ud83c\udfb6","title":"Hosting"},{"location":"host/#host-your-own-hippiedb-server","text":"Hey, tech-savvy hippie! \ud83c\udf1f Want to spread the love by hosting your own HippieDB server? That\u2019s far out! By running your own server, you can create a new node in the HippieDB network and share it with the community. Let\u2019s get groovy and walk through the steps, man.","title":"Host Your Own HippieDB Server \ud83c\udf08\ud83c\udf0d"},{"location":"host/#why-host-your-own-server","text":"Expand the Network : More servers mean more space for everyone to share their data. Customize Your Vibe : You can set up your server however you like, man. Make it your own! Help the Community : By hosting a server, you\u2019re contributing to the growth of the HippieDB ecosystem. Peace and love, baby!","title":"Why Host Your Own Server? \ud83d\udee0\ufe0f"},{"location":"host/#step-1-set-up-your-server","text":"First, you\u2019ll need to get the HippieDB server software running. Here\u2019s how: Download the Software : Grab the latest version of the HippieDB server from the official repository. If you\u2019re a coder, you can even build it from source. Far out! Run the Server : Fire up your server with a simple command. For example: java -jar hippiedb-1.1.1.jar 1970 This starts your server on port 1970 (or whatever port you dig). Test It Locally : Use a client (like the Python or Node.js examples ) to connect to your server and make sure it\u2019s working. Try setting and getting some keys to test the vibes.","title":"Step 1: Set Up Your Server \ud83c\udf31"},{"location":"host/#step-2-register-your-server-on-the-main-hippiedb","text":"Once your server is up and running, it\u2019s time to let the world know about it! You can register your server on the main HippieDB by adding a key with your server\u2019s details. Choose a Key Name : Pick a unique key name for your server, like server.groovyhippie . Set the Key Value : The value should include your server\u2019s host and port. For example: set server.groovyhippie my.hippie.host:9669 OK Share the Love : Now, anyone on the main HippieDB can find your server by looking up your key: get server.groovyhippie my.hippie.host:9669","title":"Step 2: Register Your Server on the Main HippieDB \ud83c\udf10"},{"location":"host/#step-3-spread-the-word","text":"Now that your server is registered, let the community know about it! Here\u2019s how: Announce It : Use a shared key like community.announcements to tell everyone about your new server: set community.announcements hey everyone, check out my new server at my.hippie.host:1970! peace and love! OK Invite Collaborators : Encourage others to connect to your server and start using it. The more, the merrier!","title":"Step 3: Spread the Word \ud83c\udf1f"},{"location":"host/#step-4-keep-your-server-groovy","text":"Running a server is a big responsibility, man. Here are some tips to keep it running smoothly: Monitor Performance : Keep an eye on your server\u2019s performance to make sure it\u2019s handling the load. If it gets too busy, you might need to scale up. Back Up Your Data : Regularly back up your server\u2019s data to avoid losing anything important. Peace of mind, man. Stay Connected : Keep your server connected to the main HippieDB network so others can find it. If you need to take it down for maintenance, let the community know first.","title":"Step 4: Keep Your Server Groovy \ud83c\udfb8"},{"location":"host/#step-5-be-a-good-host","text":"Hosting a server is all about sharing the love. Here\u2019s how to be a great host: Be Responsive : If someone has questions or issues, help them out. Good vibes only, man. Encourage Collaboration : Use your server to host community projects, like collaborative art or storytelling. The more creativity, the better! Respect the Community : Follow the same guidelines as everyone else. Be kind, clean up after yourself, and keep the vibes positive.","title":"Step 5: Be a Good Host \ud83c\udf3f"},{"location":"host/#final-thought-youre-a-hippiedb-hero","text":"By hosting your own server, you\u2019re helping to grow the HippieDB network and create a more connected, collaborative world. That\u2019s some next-level hippie stuff, man. So go forth, share your server, and keep spreading the love! Peace, love, and data forever. \u270c\ufe0f\ud83c\udf0d \ud83c\udf1f\ud83c\udfb6","title":"Final Thought: You\u2019re a HippieDB Hero \ud83c\udf08\u2728"},{"location":"namespace/","text":"Namespaces in HippieDB \ud83c\udf08\u270c\ufe0f Welcome to the land of peace, love, and namespaces! In HippieDB, namespaces are like your own little patch of grass in the communal database garden. They help you avoid stepping on anyone else\u2019s flowers (or data) and let you grow your own groovy stuff without hassle. Why Namespaces Are Far Out, Man \ud83c\udf3b Avoid Bad Vibes : Namespaces keep your keys chill and separate from others, so no one accidentally messes with your mojo. Stay Organized, Man : They help you keep your data as tidy as a tie-dye shirt collection. Share the Love : Namespaces let everyone coexist in harmony, like a big, happy database commune. Reserving Your Groovy Namespace \ud83d\udd4a\ufe0f First, check if your dream namespace is free, man: get namespace_garden If it\u2019s wide open, claim it with good vibes: set namespace_garden reserved by hiperbou OK Now you can start planting your data seeds in your namespace garden: set garden.myVar 1 OK get garden.myVar 1 What If Someone Else is Hogging the Namespace? \ud83c\udf3f If your desired namespace is already taken, don\u2019t freak out, man! You can either pick another groovy name or ask the current reserver to share the love. Sending a Peaceful Request \u270c\ufe0f If the namespace is already claimed, send a friendly request to the current reserver: get namespace_garden reserved by hiperbou set namespace_garden_request hey, can I borrow this namespace? I promise to water the data plants! OK The current reserver will see your request: get namespace_garden_request hey, can I borrow this namespace? I promise to water the data plants! They might ask you a question, like, who even are you, man? set namespace_garden_request what\u2019s your vibe, friend? OK You can reply with your groovy identity: set namespace_garden_request just a fellow data hippie, dblover42 at your service! OK Transferring the Namespace \ud83c\udf08 If the current reserver is feeling generous, they can pass the namespace torch to you: set namespace_garden reserved by dblover42 OK They might even leave you a little note of encouragement: set namespace_garden_request here you go, friend! may your data bloom like wildflowers! OK Don\u2019t forget to spread the gratitude, man: get namespace_garden_request here you go, friend! may your data bloom like wildflowers! set namespace_garden_request thanks a million, peace and love to you! OK Checking the Namespace Vibes \ud83c\udf38 You can always check the status of a namespace to see who\u2019s tending to it: get namespace_garden reserved by dblover42 Groovy Tips for Namespace Harmony \ud83c\udfb6 Pick a Unique Name : Choose something as unique as your spirit animal. Be Cool : When asking for a namespace, always come in peace and love. Keep It Tidy : Use your namespace consistently to keep the database garden blooming. \ud83c\udf08\u2728","title":"Namespaces"},{"location":"namespace/#namespaces-in-hippiedb","text":"Welcome to the land of peace, love, and namespaces! In HippieDB, namespaces are like your own little patch of grass in the communal database garden. They help you avoid stepping on anyone else\u2019s flowers (or data) and let you grow your own groovy stuff without hassle.","title":"Namespaces in HippieDB \ud83c\udf08\u270c\ufe0f"},{"location":"namespace/#why-namespaces-are-far-out-man","text":"Avoid Bad Vibes : Namespaces keep your keys chill and separate from others, so no one accidentally messes with your mojo. Stay Organized, Man : They help you keep your data as tidy as a tie-dye shirt collection. Share the Love : Namespaces let everyone coexist in harmony, like a big, happy database commune.","title":"Why Namespaces Are Far Out, Man \ud83c\udf3b"},{"location":"namespace/#reserving-your-groovy-namespace","text":"First, check if your dream namespace is free, man: get namespace_garden If it\u2019s wide open, claim it with good vibes: set namespace_garden reserved by hiperbou OK Now you can start planting your data seeds in your namespace garden: set garden.myVar 1 OK get garden.myVar 1","title":"Reserving Your Groovy Namespace \ud83d\udd4a\ufe0f"},{"location":"namespace/#what-if-someone-else-is-hogging-the-namespace","text":"If your desired namespace is already taken, don\u2019t freak out, man! You can either pick another groovy name or ask the current reserver to share the love.","title":"What If Someone Else is Hogging the Namespace? \ud83c\udf3f"},{"location":"namespace/#sending-a-peaceful-request","text":"If the namespace is already claimed, send a friendly request to the current reserver: get namespace_garden reserved by hiperbou set namespace_garden_request hey, can I borrow this namespace? I promise to water the data plants! OK The current reserver will see your request: get namespace_garden_request hey, can I borrow this namespace? I promise to water the data plants! They might ask you a question, like, who even are you, man? set namespace_garden_request what\u2019s your vibe, friend? OK You can reply with your groovy identity: set namespace_garden_request just a fellow data hippie, dblover42 at your service! OK","title":"Sending a Peaceful Request \u270c\ufe0f"},{"location":"namespace/#transferring-the-namespace","text":"If the current reserver is feeling generous, they can pass the namespace torch to you: set namespace_garden reserved by dblover42 OK They might even leave you a little note of encouragement: set namespace_garden_request here you go, friend! may your data bloom like wildflowers! OK Don\u2019t forget to spread the gratitude, man: get namespace_garden_request here you go, friend! may your data bloom like wildflowers! set namespace_garden_request thanks a million, peace and love to you! OK","title":"Transferring the Namespace \ud83c\udf08"},{"location":"namespace/#checking-the-namespace-vibes","text":"You can always check the status of a namespace to see who\u2019s tending to it: get namespace_garden reserved by dblover42","title":"Checking the Namespace Vibes \ud83c\udf38"},{"location":"namespace/#groovy-tips-for-namespace-harmony","text":"Pick a Unique Name : Choose something as unique as your spirit animal. Be Cool : When asking for a namespace, always come in peace and love. Keep It Tidy : Use your namespace consistently to keep the database garden blooming. \ud83c\udf08\u2728","title":"Groovy Tips for Namespace Harmony \ud83c\udfb6"}]}